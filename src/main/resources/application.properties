spring.profiles.active=@spring.profiles.active@
spring.jpa.open-in-view=false

# Configuration de la base de données MySQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Pool de connexion HikariCP (optimisé)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=ChatopHikariCP


# Activer les couleurs
spring.output.ansi.enabled=ALWAYS

# Format des logs
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){blue} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){yellow} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n

# Niveaux de logs personnalisés
logging.level.root=INFO
logging.level.com.escanor1986.tennis=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN



#! Commandes terminal pour :
#! Packager l'app en version prod (a)
#! Lancer la db de prod (b)
#! Lancer l'app en prod (c)
#! Arrêter la db de prod (d)

# ./mvnw -Pprod clean package (a)

# docker compose -f src/main/docker/prod/postgresql.yml up (b)

# java -jar target/escanor-tennis.jar \ (c)
# --spring.datasource.url="jdbc:postgresql://localhost:5424/postgres" \
# --spring.datasource.username="postgres" \
# --spring.datasource.password="5ML^Es#x%4U&DK6c"

# docker compose -f src/main/docker/prod/postgresql.yml down (d)
