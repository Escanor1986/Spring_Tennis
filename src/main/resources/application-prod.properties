# Configuration de la base de données MySQL
spring.datasource.url=# prod config will be injected here #
spring.datasource.username=# prod config will be injected here #
spring.datasource.password=# prod config will be injected here #

# Activer les couleurs
spring.output.ansi.enabled=ALWAYS

# Format des logs
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){blue} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){yellow} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n

# Niveaux de logs personnalisés
logging.level.root=INFO
logging.level.com.escanor1986.tennis=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN

spring.flyway.locations=classpath:db/migrations/common,classpath:db/migrations/prod

#! Commandes terminal pour :
#! Packager l'app en version prod (a)
#! Build l'image docker (b)
#! Lancer la db de prod (c)
#! Démarrer l'application en l'associant au réseau de la db (d)
#! Arrêter la db de prod (e)
#! Suppression du container (f)


# ./mvnw -Pprod clean package (a)

# docker build -t escanor-tennis-api . (b)

# docker compose -f src/main/docker/prod/postgresql.yml up (c)

# docker run --name escanor-tennis -p 8080:8080 --net prod_default \ (d)
# -e SPRING_DATASOURCE_URL="jdbc:postgresql://escanor-postgres-production:5432/postgres" \
# -e SPRING_DATASOURCE_USERNAME="postgres" \
# -e SPRING_DATASOURCE_PASSWORD="5ML^Es#x%4U&DK6c" \
#  escanor-tennis-api

# docker compose -f src/main/docker/prod/postgresql.yml down (e)

# docker rm escanor-tennis (f)
